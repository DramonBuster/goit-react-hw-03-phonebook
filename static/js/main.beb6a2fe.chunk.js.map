{"version":3,"sources":["Components/Filter/Filter.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Phonebook/Phonebook.js","App.js","reportWebVitals.js","index.js"],"names":["FormItem","styled","label","FormInput","input","FormHeading","h3","Filter","value","onChange","type","ItemWrapper","div","ContactInfo","p","ContactName","span","ContactNumber","DeleteButton","button","ContactListItem","contact","onDeleteContact","name","number","onClick","id","List","ul","ContactList","contacts","map","FormWrapper","form","FormLabel","FormTitle","FormButton","ContactForm","state","changeState","event","currentTarget","setState","contactSubmit","preventDefault","props","onAddContact","reset","this","onSubmit","pattern","title","required","Component","Wrapper","Heading","h1","SubHeading","h2","Phonebook","data","filter","addContact","nanoid","find","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getCurrentPhonebook","includes","localStorage","getItem","parsedContacts","JSON","parse","prevPops","setItem","stringify","currentPhonebook","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beb6a2fe.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst FormItem = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  font-weight: 600;\r\n  color: black;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border: solid 2px black;\r\n  margin-bottom: 20px;\r\n\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 1px 1px blue;\r\n    border: solid 1px black;\r\n  }\r\n`;\r\n\r\nconst FormHeading = styled.h3`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <FormItem>\r\n        <FormHeading>Find contacts by name</FormHeading>\r\n        <FormInput\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </FormItem>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ContactInfo = styled.p`\r\n  margin-right: 25px;\r\n`;\r\n\r\nconst ContactName = styled.span`\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst ContactNumber = styled.span`\r\n  font-style: italic;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  padding: 2px 4px;\r\n  width: 100px;\r\n\r\n  cursor: pointer;\r\n  color: black;\r\n  border: solid 1px black;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  line-height: 1.475;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  :hover {\r\n    color: white;\r\n    background-color: red;\r\n  }\r\n`;\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact }) => (\r\n    <ItemWrapper>\r\n        <ContactInfo>\r\n            <ContactName>{contact.name}</ContactName>\r\n            <ContactNumber>{contact.number}</ContactNumber>\r\n        </ContactInfo>\r\n        <DeleteButton onClick={() => onDeleteContact(contact.id)}>Delete</DeleteButton>\r\n    </ItemWrapper>\r\n)\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }),\r\n    onDeleteContact:PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst List = styled.ul`\r\n  width: 400px;\r\n`;\r\n\r\n\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <List>\r\n        {contacts.map(contact => (\r\n            <li key={contact.id}>\r\n                <ContactListItem contact={contact} onDeleteContact={onDeleteContact}/>\r\n            </li>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onDeleteContact:PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FormWrapper = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 30px 30px;\r\n\r\n  margin-bottom: 20px;\r\n  border: solid 1px black;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FormLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n\r\n  font-weight: 600;\r\n  color: black;\r\n`;\r\n\r\nconst FormTitle = styled.h3`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n  border-radius: 3px;\r\n  border: solid 2px black;\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 3px 3px blue;\r\n    border: solid 1px black;\r\n  }\r\n`;\r\n\r\nconst FormButton = styled.button`\r\n  padding: 2px 4px;\r\n  width: 120px;\r\n\r\n  cursor: pointer;\r\n  color: black;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  border: solid 1px black;\r\n  \r\n\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 1.875;\r\n  align-items: center;\r\n  text-align: center;\r\n  \r\n  :hover {\r\n    color: white;\r\n    background-color: lightgreen;\r\n  }\r\n`;\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        id: '',\r\n    }\r\n\r\n    changeState = event => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    contactSubmit = event => {\r\n        event.preventDefault();\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n        this.props.onAddContact(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <FormWrapper onSubmit={this.contactSubmit}>\r\n                <FormLabel>\r\n                    <FormTitle>Name</FormTitle>\r\n                    <FormInput\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.changeState}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </FormLabel>\r\n                <FormLabel>\r\n                    <FormTitle>Number</FormTitle>\r\n                    <FormInput\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={this.changeState}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </FormLabel>\r\n                <FormButton type=\"submit\">Add contact</FormButton>\r\n            </FormWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport styled from 'styled-components';\r\nimport data from '../../data/contacts.json';\r\nimport Filter from '../Filter/Filter';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: venter;\r\n  margin-bottom: 30px;\r\n\r\n  :last-child {\r\n    margin-bottom: 0px;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  margin-bottom: 20px;\r\n  font-size: 36px;\r\n  text-align: center;\r\n`;\r\n\r\nconst SubHeading = styled.h2`\r\n  margin-bottom: 20px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n`;\r\n\r\nclass Phonebook extends Component {\r\n    state = {\r\n        contacts: data,\r\n        filter: '',\r\n    };\r\n\r\n    addContact = ({ name, number }) => {\r\n        const { contacts } = this.state;\r\n        const contact = {\r\n            id: nanoid(),\r\n            name,\r\n            number,\r\n        };\r\n\r\n        if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\r\n            alert(`${name} is already in contacts`);\r\n            return;\r\n        }\r\n\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [contact, ...contacts]\r\n        }))\r\n    }\r\n\r\n    deleteContact = contactId => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n        }))\r\n    }\r\n\r\n    changeFilter = event => {\r\n        this.setState({ filter: event.currentTarget.value });\r\n    }\r\n\r\n    getCurrentPhonebook = () => {\r\n        const { contacts, filter } = this.state;\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n    }\r\n  \r\n    componentDidMount() {\r\n        const contacts = localStorage.getItem('contacts');\r\n        const parsedContacts = JSON.parse(contacts);\r\n        if (parsedContacts) {\r\n        this.setState({ contacts: parsedContacts });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevPops, prevState) {\r\n        const { contacts} = this.state;\r\n        if (contacts !== prevState.contacts) {\r\n        localStorage.setItem('contacts', JSON.stringify(contacts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { filter } = this.state;\r\n        const currentPhonebook = this.getCurrentPhonebook();\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Heading>Phonebook</Heading>\r\n                <ContactForm onAddContact={this.addContact} />\r\n                <SubHeading>Contacts</SubHeading>\r\n                <Filter value={filter} onChange={this.changeFilter} />\r\n                <ContactList contacts={currentPhonebook} onDeleteContact={this.deleteContact} />\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Phonebook;","import './App.css';\nimport styled from 'styled-components';\nimport Phonebook from './Components/Phonebook/Phonebook';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 0 15px;\n  width: 430px;\n`;\n\nfunction App() {\n    return (\n      <Container>\n        <Phonebook />\n      </Container>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n  ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}